<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数 proterties属性：${jdbc.url} -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 2.数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="DriverClass" value="${jdbc.driver}"/>
		<property name="JdbcUrl" value="${jdbc.url}"/>
		<property name="User" value="${jdbc.username}"/>
		<property name="Password" value="${jdbc.password}"/>

		<!-- c3p0连接池的私有属性 -->
		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="30" />
		<!-- 连接池中保留的最小连接数，默认为：3 -->
		<property name="minPoolSize" value="10" />
		<!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException， 如设为0则无限期等待。单位毫秒。默认: 
			0 -->
		<property name="checkoutTimeout" value="1000" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>
	<!-- 约定的大于配置 -->
	<!-- 3.配置sqlSesiionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置mybatis全局配置文件：mybatis-config.xml -->
		<!-- maven中java和resources目录都是classpath -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名，有多个包时可以用分号隔开 -->
		<property name="typeAliasesPackage" value="org.seckill.entity" />
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，并注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<!-- BeanName 后处理方式，当需要使用时再找对应的sqlSessionFactory，防止提前初始化sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出扫描Dao接口包 -->
		<property name="basePackage" value="org.seckill.dao"></property>
	</bean>
	
	<!-- redisDao -->
	<bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
		<constructor-arg index="0" value="localhost"/>
		<constructor-arg index="1" value="6379"/>
	</bean>
</beans>